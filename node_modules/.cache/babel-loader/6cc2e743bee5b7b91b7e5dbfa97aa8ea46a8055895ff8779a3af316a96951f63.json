{"ast":null,"code":"var _jsxFileName = \"/Users/gawin/Documents/projects/todo-list-reacthook/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //use hooks\n  const [newItem, setNewItem] = useState(\"\");\n  const [itemList, setItemList] = useState([]);\n  function addItem() {\n    if (!newItem) {\n      alert(\"Please enter an item!\");\n      return;\n    }\n    const item = {\n      id: Math.floor(Math.random() * 1000),\n      value: newItem\n    };\n    setItemList(oldList => [...oldList, item]);\n    setNewItem(\"\");\n  }\n  // function deleteItem(id){\n  //   const itemsAfterDel = itemList.filter( item => item.id !== id)\n  //   setItemList(itemsAfterDel)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do List With React Hooks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add an item...\",\n      value: newItem,\n      onChange: e => {\n        setNewItem(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: itemList.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.value, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteItem(item.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zNKMRHUOmdZ5VWkccoVZBDldZVQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","newItem","setNewItem","itemList","setItemList","addItem","alert","item","id","Math","floor","random","value","oldList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","map","deleteItem","_c","$RefreshReg$"],"sources":["/Users/gawin/Documents/projects/todo-list-reacthook/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  //use hooks\n  const[newItem, setNewItem] = useState(\"\");\n  const[itemList, setItemList] = useState([])\n\n  function addItem(){\n    if(!newItem){\n      alert(\"Please enter an item!\")\n      return\n    }\n    const item = {\n      id: Math.floor(Math.random() * 1000),\n      value: newItem\n    }\n    setItemList(oldList => [...oldList, item])\n    setNewItem(\"\")\n  }\n  // function deleteItem(id){\n  //   const itemsAfterDel = itemList.filter( item => item.id !== id)\n  //   setItemList(itemsAfterDel)\n  // }\n\n  return (\n    <div className=\"App\">\n      {/* The Head */}\n      <h1>To Do List With React Hooks</h1>\n      {/* The Input */}\n      <input\n        type='text'\n        placeholder='Add an item...'\n        value={newItem}\n        onChange={e=>{setNewItem(e.target.value)}}\n      />\n      {/* Add Button */}\n      <button\n        onClick = {addItem}\n      >Add</button>\n      {/* List of items */}\n      <ul>\n        {itemList.map(item => {\n          return(\n            <li key={item.id}>{item.value}\n            <button onClick={deleteItem(item.id)}>X</button>\n            </li>\n          )})}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAK,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE3C,SAASS,OAAOA,CAAA,EAAE;IAChB,IAAG,CAACJ,OAAO,EAAC;MACVK,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACF;IACA,MAAMC,IAAI,GAAG;MACXC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;MACpCC,KAAK,EAAEX;IACT,CAAC;IACDG,WAAW,CAACS,OAAO,IAAI,CAAC,GAAGA,OAAO,EAAEN,IAAI,CAAC,CAAC;IAC1CL,UAAU,CAAC,EAAE,CAAC;EAChB;EACA;EACA;EACA;EACA;;EAEA,oBACEJ,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBjB,OAAA;MAAAiB,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpCrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gBAAgB;MAC5BT,KAAK,EAAEX,OAAQ;MACfqB,QAAQ,EAAEC,CAAC,IAAE;QAACrB,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACZ,KAAK,CAAC;MAAA;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAEFrB,OAAA;MACE2B,OAAO,EAAIpB,OAAQ;MAAAU,QAAA,EACpB;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEbrB,OAAA;MAAAiB,QAAA,EACGZ,QAAQ,CAACuB,GAAG,CAACnB,IAAI,IAAI;QACpB,oBACET,OAAA;UAAAiB,QAAA,GAAmBR,IAAI,CAACK,KAAK,eAC7Bd,OAAA;YAAQ2B,OAAO,EAAEE,UAAU,CAACpB,IAAI,CAACC,EAAE,CAAE;YAAAO,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GADvCZ,IAAI,CAACC,EAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CAAC;MACN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnB,EAAA,CAhDQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}